name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      
      # Clean install
      - run: npm cache clean --force
      - run: rm -rf node_modules
      - run: npm install -g nx@latest
      
      # Install all dependencies with --ignore-scripts
      - run: |
          npm install --ignore-scripts --save react@18.2.0 react-dom@18.2.0 && \
          npm install --ignore-scripts --save-dev \
          @types/react@18.2.0 @types/react-dom@18.2.0 \
          @swc-node/register @swc/core \
          @nx/webpack webpack-cli \
          @nx/eslint-plugin eslint-plugin-playwright \
          @playwright/test jest jest-environment-jsdom \
          @nx/jest @nx/react @nx/eslint @nx/playwright \
          typescript-eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin \
          eslint ts-jest \
          eslint-plugin-import eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-jsx-a11y \
          @testing-library/react @testing-library/jest-dom @testing-library/user-event

      # Install project dependencies
      - run: npm install
      
      # Debug: Show project structure before build
      - run: |
          echo "Project structure before build:"
          pwd
          ls -la
          echo "Package.json contents:"
          cat package.json || true
          echo "Project.json contents:"
          cat project.json || true
          echo "Nx.json contents:"
          cat nx.json || true
      
      # Build for production with verbose output
      - run: |
          echo "Running build command..."
          set -x  # Enable command echo
          npx nx build hatch_project --configuration=production --verbose
          set +x  # Disable command echo
          
          echo "Build command completed. Checking for build files..."
          echo "Current directory structure:"
          ls -R
          
          echo "Looking for build files:"
          find . -type f \( -name "*.js" -o -name "*.html" -o -name "*.css" \) -not -path "./node_modules/*"
      
      # Create and populate the output directory
      - run: |
          # Create output directory
          mkdir -p dist/apps/hatch_project
          
          # Find all build files
          echo "Searching for build files..."
          BUILD_FILES=$(find . -type f \( \
            -name "*.js" -o \
            -name "*.html" -o \
            -name "*.css" -o \
            -name "*.json" -o \
            -name "*.ico" -o \
            -name "*.png" -o \
            -name "*.svg" \
          \) -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./dist/apps/hatch_project/*")
          
          if [ -n "$BUILD_FILES" ]; then
            echo "Found build files:"
            echo "$BUILD_FILES"
            
            # Copy each file to the deployment directory
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                echo "Copying $file to dist/apps/hatch_project/"
                cp "$file" dist/apps/hatch_project/
              fi
            done <<< "$BUILD_FILES"
          else
            echo "No build files found!"
            echo "Contents of current directory:"
            ls -la
            echo "Contents of dist directory (if exists):"
            ls -la dist/ || true
            exit 1
          fi
      
      # Verify the output directory has files
      - run: |
          echo "Final contents of dist/apps/hatch_project:"
          ls -la dist/apps/hatch_project/
          
          if [ -z "$(ls -A dist/apps/hatch_project/)" ]; then
            echo "Error: No files found in deployment directory!"
            exit 1
          fi
      
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/hatch_project
          enable_jekyll: false
          keep_files: true
          force_orphan: false