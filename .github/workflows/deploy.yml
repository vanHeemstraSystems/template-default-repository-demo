name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      
      # Clean install
      - run: npm cache clean --force
      - run: rm -rf node_modules
      - run: npm install -g nx@latest
      
      # Install all dependencies with --ignore-scripts
      - run: |
          npm install --ignore-scripts --save react@18.2.0 react-dom@18.2.0 && \
          npm install --ignore-scripts --save-dev \
          @types/react@18.2.0 @types/react-dom@18.2.0 \
          @swc-node/register @swc/core \
          @nx/webpack webpack-cli \
          @nx/eslint-plugin eslint-plugin-playwright \
          @playwright/test jest jest-environment-jsdom \
          @nx/jest @nx/react @nx/eslint @nx/playwright \
          typescript-eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin \
          eslint ts-jest \
          eslint-plugin-import eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-jsx-a11y \
          @testing-library/react @testing-library/jest-dom @testing-library/user-event

      # Install project dependencies
      - run: npm install
      
      # Build for production
      - run: |
          echo "Running build command..."
          npx nx build hatch_project --configuration=production
      
      # Debug: Show build output
      - run: |
          echo "Build output structure:"
          ls -R dist/
      
      # Copy build files to deployment directory
      - run: |
          # Ensure target directory exists
          mkdir -p dist/apps/hatch_project
          
          # Look for build output in common locations
          if [ -d "dist/hatch_project" ]; then
            echo "Found build output in dist/hatch_project"
            cp -r dist/hatch_project/* dist/apps/hatch_project/
          elif [ -d "dist/apps/hatch_project" ]; then
            echo "Build output already in correct location"
          else
            echo "Error: Could not find build output"
            echo "Contents of dist directory:"
            ls -R dist/
            exit 1
          fi
      
      # Verify deployment directory
      - run: |
          echo "Deployment directory contents:"
          ls -la dist/apps/hatch_project/
          
          if [ -z "$(ls -A dist/apps/hatch_project/)" ]; then
            echo "Error: Deployment directory is empty"
            exit 1
          fi
      
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/apps/hatch_project
          enable_jekyll: false
          keep_files: false  # Changed to false to avoid keeping config files
          force_orphan: true  # Changed to true to start fresh